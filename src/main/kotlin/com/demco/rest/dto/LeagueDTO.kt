package com.demco.rest.dto

import com.demco.rest.entity.League
import kotlinx.serialization.Serializable

@Serializable
data class LeagueRequestDTO(
  val ownerId: Int,
  val name: String,
  val qbs: Int,
  val rbs: Int,
  val wrs: Int,
  val tes: Int,
  val flex: Int,
  val kicker: Int,
  val def: Int,
  val ppPassYd: Double,
  val ppPassTd: Int,
  val ppPass2pt: Int,
  val ppPassInt: Int,
  val ppPassPick6: Int,
  val ppRushYd: Double,
  val ppRushTd: Int,
  val ppRush2pt: Int,
  val ppRecRecep: Double,
  val ppRecYd: Float,
  val ppRecTd: Int,
  val ppRec2pt: Int,
  val ppFg0_19: Int,
  val ppFg20_29: Int,
  val ppFg30_39: Int,
  val ppFg40_49: Int,
  val ppFg_50: Int,
  val ppPat: Int,
  val ppFgMissed: Int,
  val fgMissedMax: Int,
  val ppPatMissed: Int,
  val ppDefTd: Int,
  val ppDefPtsAllowed0: Int,
  val ppDefPtsAllowed1_6: Int,
  val ppDefPtsAllowed7_13: Int,
  val ppDefPtsAllowed14_20: Int,
  val ppDefPtsAllowed21_27: Int,
  val ppDefPtsAllowed28_34: Int,
  val ppDefPtsAllowed35: Int,
  val ppDef4thDownStop: Int,
  val ppDefSack: Int,
  val ppDefInterception: Int,
  val ppDefFumbleRecovery: Int,
  val ppDefSafety: Int,
  val ppDefForcedFumble: Int,
  val ppDefBlockedKick: Int,
  val ppSptTd: Int,
  val ppSptForcedFumble: Int,
  val ppSptFumbleRecovery: Int,
  val ppFumbleTd: Int,
  val ppFumbleLost: Int,
  val playoffWeek: Int
)

@Serializable
data class LeagueResponseDTO(
  val id: Int,
  val ownerId: Int,
  val name: String,
  val qbs: Int,
  val rbs: Int,
  val wrs: Int,
  val tes: Int,
  val flex: Int,
  val kicker: Int,
  val def: Int,
  val ppPassYd: Double,
  val ppPassTd: Int,
  val ppPass2pt: Int,
  val ppPassInt: Int,
  val ppPassPick6: Int,
  val ppRushYd: Double,
  val ppRushTd: Int,
  val ppRush2pt: Int,
  val ppRecRecep: Double,
  val ppRecYd: Float,
  val ppRecTd: Int,
  val ppRec2pt: Int,
  val ppFg0_19: Int,
  val ppFg20_29: Int,
  val ppFg30_39: Int,
  val ppFg40_49: Int,
  val ppFg_50: Int,
  val ppPat: Int,
  val ppFgMissed: Int,
  val fgMissedMax: Int,
  val ppPatMissed: Int,
  val ppDefTd: Int,
  val ppDefPtsAllowed0: Int,
  val ppDefPtsAllowed1_6: Int,
  val ppDefPtsAllowed7_13: Int,
  val ppDefPtsAllowed14_20: Int,
  val ppDefPtsAllowed21_27: Int,
  val ppDefPtsAllowed28_34: Int,
  val ppDefPtsAllowed35: Int,
  val ppDef4thDownStop: Int,
  val ppDefSack: Int,
  val ppDefInterception: Int,
  val ppDefFumbleRecovery: Int,
  val ppDefSafety: Int,
  val ppDefForcedFumble: Int,
  val ppDefBlockedKick: Int,
  val ppSptTd: Int,
  val ppSptForcedFumble: Int,
  val ppSptFumbleRecovery: Int,
  val ppFumbleTd: Int,
  val ppFumbleLost: Int,
  val playoffWeek: Int
)

fun League.toResponseDTO(): LeagueResponseDTO =
  LeagueResponseDTO(
    id = id.value,
    ownerId = ownerId,
    name = name,
    qbs = qbs,
    rbs = rbs,
    wrs = wrs,
    tes = tes,
    flex = flex,
    kicker = kicker,
    def = def,
    ppPassYd = ppPassYd,
    ppPassTd = ppPassTd,
    ppPass2pt = ppPass2pt,
    ppPassInt = ppPassInt,
    ppPassPick6 = ppPassPick6,
    ppRushYd = ppRushYd,
    ppRushTd = ppRushTd,
    ppRush2pt = ppRush2pt,
    ppRecRecep = ppRecRecep,
    ppRecYd = ppRecYd,
    ppRecTd = ppRecTd,
    ppRec2pt = ppRec2pt,
    ppFg0_19 = ppFg0_19,
    ppFg20_29 = ppFg20_29,
    ppFg30_39 = ppFg30_39,
    ppFg40_49 = ppFg40_49,
    ppFg_50 = ppFg_50,
    ppPat = ppPat,
    ppFgMissed = ppFgMissed,
    fgMissedMax = fgMissedMax,
    ppPatMissed = ppPatMissed,
    ppDefTd = ppDefTd,
    ppDefPtsAllowed0 = ppDefPtsAllowed0,
    ppDefPtsAllowed1_6 = ppDefPtsAllowed1_6,
    ppDefPtsAllowed7_13 = ppDefPtsAllowed7_13,
    ppDefPtsAllowed14_20 = ppDefPtsAllowed14_20,
    ppDefPtsAllowed21_27 = ppDefPtsAllowed21_27,
    ppDefPtsAllowed28_34 = ppDefPtsAllowed28_34,
    ppDefPtsAllowed35 = ppDefPtsAllowed35,
    ppDef4thDownStop = ppDef4thDownStop,
    ppDefSack = ppDefSack,
    ppDefInterception = ppDefInterception,
    ppDefFumbleRecovery = ppDefFumbleRecovery,
    ppDefSafety = ppDefSafety,
    ppDefForcedFumble = ppDefForcedFumble,
    ppDefBlockedKick = ppDefBlockedKick,
    ppSptTd = ppSptTd,
    ppSptForcedFumble = ppSptForcedFumble,
    ppSptFumbleRecovery = ppSptFumbleRecovery,
    ppFumbleTd = ppFumbleTd,
    ppFumbleLost = ppFumbleLost,
    playoffWeek = playoffWeek
  )
