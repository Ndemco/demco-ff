version: '3.9'

services:
  db:
    image: postgres
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: password
    healthcheck:
      test: pg_isready -U test -d demco_ff
      interval: 3s
      timeout: 3s
      retries: 10

  mongo1:
    image: mongo:6.0.2
    volumes:
      - ./rs-init.sh:/scripts/rs-init.sh
    ports:
      - "27017:27017"
    restart: always
    entrypoint: ["/usr/bin/mongod", "--quiet", "--bind_ip_all", "--replSet", "demco-ff-replica-set"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo2:
    image: mongo:6.0.2
    ports:
      - "27018:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--quiet", "--bind_ip_all", "--replSet", "demco-ff-replica-set" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo3:
    image: mongo:6.0.2
    ports:
      - "27019:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--quiet", "--bind_ip_all", "--replSet", "demco-ff-replica-set" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-setup:
    image: mongo:6.0.2
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./rs-init.sh:/scripts/rs-init.sh
    restart: "no"
    entrypoint: ["bash", "/scripts/rs-init.sh"]

  redis:
    image: redis
    command: redis-server
    ports:
      - "6379:6379"

  demco-ff-api:
    image: demco-ff-api
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: test
      DB_PASSWORD: password

  playwright-tests:
    image: mcr.microsoft.com/playwright:focal
    working_dir: /integration
    volumes:
      - ./:/integration
    entrypoint: ./docker-entrypoint.sh
    depends_on:
      - demco-ff-api